{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "AI Prompt Pack",
  "description": "Standard structure for AI documentation requests orchestrated via Cursor + Codex CLI.",
  "type": "object",
  "required": ["metadata", "inputs", "constraints", "prompt", "outputs", "trace"],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["phase", "subprocess", "deliverable", "deliverable_path"],
      "properties": {
        "phase": {"type": "string", "description": "Timesheet phase identifier (e.g., 01_foundation)."},
        "subprocess": {"type": "string", "description": "Subprocess slug inside the phase (e.g., project_configuration)."},
        "deliverable": {"type": "string", "description": "Deliverable template key (agent, overview, implementation_guide, etc.)."},
        "deliverable_path": {"type": "string", "description": "Path to the target file that should be updated once the AI response is accepted."},
        "summary": {"type": "string", "description": "Human-readable synopsis of the deliverable objective."},
        "priority": {"type": "string", "enum": ["high", "medium", "low"], "description": "Optional priority code for orchestration queues."}
      }
    },
    "inputs": {
      "type": "object",
      "required": ["context_index_path", "context_items"],
      "properties": {
        "context_index_path": {"type": "string", "description": "Path to the knowledge index generated by context_index.py."},
        "context_items": {
          "type": "array",
          "description": "Context bundle assembled for this deliverable.",
          "items": {
            "type": "object",
            "required": ["id", "role", "path"],
            "properties": {
              "id": {"type": "string", "description": "Stable identifier used inside prompts."},
              "role": {"type": "string", "description": "Functional role tag (process-flow, schema, front-end, back-end, policy, logs, asset, issue, reference)."},
              "path": {"type": "string", "description": "Repository relative path to the artifact."},
              "modified": {"type": "string", "description": "ISO timestamp of the artifact's last modification."},
              "summary": {"type": "string", "description": "Short description or title extracted from the artifact."},
              "snippet": {"type": "string", "description": "Truncated excerpt of the artifact content for quick reference."}
            }
          }
        },
        "change_summary": {
          "type": "array",
          "description": "Optional list describing changes since the last run for incremental prompting.",
          "items": {
            "type": "object",
            "required": ["path", "change_type"],
            "properties": {
              "path": {"type": "string"},
              "change_type": {"type": "string", "enum": ["added", "modified", "deleted"]},
              "details": {"type": "string"}
            }
          }
        }
      }
    },
    "constraints": {
      "type": "object",
      "required": ["style", "checklist"],
      "properties": {
        "style": {"type": "string", "description": "Tone and formatting guidance for the AI output."},
        "voice": {"type": "string", "description": "Optional voice or persona instructions."},
        "checklist": {
          "type": "array",
          "description": "Completion requirements the AI output must satisfy.",
          "items": {"type": "string"}
        },
        "acceptance_tests": {
          "type": "array",
          "description": "Optional qualitative tests or validations to confirm completeness.",
          "items": {"type": "string"}
        }
      }
    },
    "prompt": {
      "type": "object",
      "required": ["system", "user"],
      "properties": {
        "system": {"type": "string", "description": "System prompt establishing role and expectations."},
        "user": {"type": "string", "description": "User prompt incorporating context references and task instructions."}
      }
    },
    "outputs": {
      "type": "object",
      "required": ["format", "path"],
      "properties": {
        "format": {"type": "string", "enum": ["markdown", "json", "html", "text"], "description": "Expected file format."},
        "path": {"type": "string", "description": "Destination path for the AI output."},
        "append": {"type": "boolean", "description": "If true, append instead of overwrite."}
      }
    },
    "trace": {
      "type": "object",
      "required": ["generated_at", "builder", "model_hint"],
      "properties": {
        "generated_at": {"type": "string", "description": "ISO timestamp when the prompt pack was generated."},
        "builder": {"type": "string", "description": "Path to the helper script or tool used (e.g., shared/prompt_pack_builder.py)."},
        "model_hint": {"type": "string", "description": "Recommended model or temperature settings."},
        "notes": {"type": "string", "description": "Additional execution guidance or operator notes."}
      }
    }
  }
}

